••• P7.10
In this assignment, you will implement a simulation of a popular casino game usually called video poker.
The card deck contains 52 cards, 13 of each suit.
At the beginning of the game, the deck is shuffled. You need to devise a fair method for shuffling.
(It does not have to be efficient.)
The player pays a token for each game.
Then the top five cards of the deck are presented to the player.
The player can reject none, some, or all of the cards.
The rejected cards are replaced from the top of the deck.
Now the hand is scored.
Your program should pronounce it to be one of the following:
• No pair—The lowest hand, containing five separate cards that do not match up to create any of the hands below.
• One pair—Two cards of the same value, for example two queens. Payout: 1
• Two pairs—Two pairs, for example two queens and two 5’s. Payout: 2
• Three of a kind—Three cards of the same value, for example three queens. Payout: 3
• Straight—Five cards with consecutive values, not necessarily of the same suit, such as 4, 5, 6, 7, and 8.
  The ace can either precede a 2 or follow a king. Payout: 4
• Flush—Five cards, not necessarily in order, of the same suit. Payout: 5
• Full House—Three of a kind and a pair, for example three queens and two 5’s. Payout: 6
• Four of a Kind—Four cards of the same value, such as four queens. Payout: 25
• Straight Flush—A straight and a flush: Five cards with consecutive values of the same suit. Payout: 50
• Royal Flush—The best possible hand in poker. A 10, jack, queen, king, and ace, all-of-the same suit. Payout: 250

problem-solving:
a deck has 52 cards, 13 of each suit, in order. so a card has a suit and a value.
a deck can be shuffled.

for a game to be played:
a player pays a token to play a game
the deck is shuffled
the top 5 cards of the deck are presented to the user
the player can reject none, some, or all of the cards
The rejected cards are replaced from the top of the deck
now the hand is scored

which aspects of a video poker simulator do I need to model?
 - ask the player to pay a token to play a game of video poker
 - shuffle a deck of 52 cards containing 13 cars of 4 different suits
 - present the 5 cards at the top of the deck to the player
 - the player can reject none, some, or all of the cards
 - the rejected cards are replaced from the top of the deck
 - the hand is now scored as either:
    * no pair: 5 cards that do not match any of the scoring hands below, payout: 0
    * one pair: two cards of the same value, payout: 1
    * two pairs: two pairs of two cards of the same value, payout: 2
    * three of a kind: three cards of the same value, payout: 3
    * straight: five cards with consecutive values (the ace can either precede a 2 or follow a king), payout: 4
    * flush: five cards, not necessarily in order, of the same suit, payout: 5
    * full house: three of a king and a pair, payout: 6
    * four of a kind: four cards of the same value, payout: 25
    * straight flush: straight and a flush, payout: 50
    * royal flush: the best hand in poker, a flush and a straight with card values 10-jack-queen-king-ace, payout: 250

Now, I can specify the public interface of the VideoPokerSimulator class by applying method calls to a sample object

Deck class shuffle method problem-solving
step 1) understand the problem
What are the inputs? an array of 52 cards
What are the desired outputs? a shuffled deck,
i.e., the input array elements in a different and somewhat random order
step 2) solve an example by hand
1H 2H 3H 1S 2S 3S
3H 2S 1H 2H 1S 3S
step 3) write pseudocode for solving the problem
access first element in array of cards
access random element in array of cards
switch first element with random element
access second card in cards
access random card in cards
switch second card with random card
access third card in cards
access random card in cards
switch third card with random card
... repeat this
what are the steps to repeat? (implementing a loop)
cardCounter = 1
access card at counter in cards
access random card in cards
switch card with random card
increment counter
what goal do you want to reach in your loop?
I want to reach the end of the cards array,
so I want to swap a card with each position in the cards array
while counter <= cards.length
    cardCounter = 1
    access card at counter in cards
    access random card in cards
    switch card with random card
    increment counter
what kind of loop is this?
count controlled because the variable that controls the execution of the
loop body is modified by a constant amount once per loop iteration until
it reaches a target value.
for index from 0 to cards.length - 1
    access card at index
    access card at random index
    switch card with random card (use a temporary value holder)

score hand method problem-solving
step 1 - understand the problem
what are the inputs?
the first 5 cards in an array
what are the desired outputs?
a description of the hand a player has and the associated payout
step 2 - solve an example of the problem by hand
cards:
ace of hearts,
ace of spades,
3 of diamonds,
3 of spades,
3 of hearts
2 of a kind (pair) and 3 of a kind is a full house.
associated payout is 6
step 3 - write pseudocode for solving the problem
hand = copy of first 5 cards in this game's deck
by default hand is no pair.
hand = no pair
payout = 0
// check for pair
repeatedCard = null;
for card in hand
    cardValueCounter = 1
    for otherCard in deck
        if card reference != otherCard reference && card value == otherCard value
            cardValueCounter = cardValueCounter + 1
            repeatedCard = card reference
if cardValueCounter == 2
    hand = pair
    // check for second pair
    for card in hand
        if card value != repeatedCard value
            cardValueCounter
else if cardValueCounter == 3
    hand = three of a kind
else if cardValueCounter == 4
    hand = four of a kind

I'M THINKING I SHOULD JUST DO THIS BY PAYOUT. THAT WAY AT THE END I CAN
SAY GT WHICHEVER PAYOUT IS HIGHEST. WHAT I MEAN IS, I CAN CHECK ALL THE
CONDITIONS AND THEN ONLY ASSIGN THE PAYOUT IF IT IS HIGHER THAN THE CURRENT
PAYOUT.

working with arrays problem-solving of scoreHand method pdf p.379
step 1 - Decompose my task into steps
find out if there are any pairs in the hand array
find out if there are two pairs in the hand array
...
there's a lot of stuff here.
Lemme just start with no pair and then pair.
How do I check to see if there is a pair in my array?
Now I will apply the working with arrays how-to problem-solving method from pdf p.378

for each card in hand
    for every other card in hand
        if card value == other card value
            pair = true

okay, well I implemented the hasPair method of the score hand method.
Now I need to see if the player has two pairs.

pairCounter = 0
for each card in the hand
    cardValue = card value
    for each other card in the hand
        if cardIndex != otherCardIndex
            otherCardValue = other card value
            if cardValue == otherCardValue
                // this is a pair.
                pairCounter = pairCounter + 1;
                remove card from hand
                remove other card from hand
                handWithoutFirstPair = hand array without card and other card

