Write programs that read a line of input as a string
and print the positions of all vowels in the string.

computation problem-solving how-to

step 1: understand the problem
what are the inputs? A string as an input line.
What are the desired outputs? the integer positions of all vowels in the string.

step 2: solve examples by hand
input: "Hello World!"
output: 1 4 7

step 3: write a pseudocode algorithm for solving general instances of the problem using the method you
used for solving a specific instance of the problem by hand

inputStream = ask user for keyboard input
inputLine = read next line from the input stream
read next character from inputLine
if nextCharacter equals a vowel
    output position of nextCharacter
...repeat last 3 steps until there are no more characters left in the input line

implementing a loop how-to

part 1 loop imp.: decide which steps need to be repeated in the loop body

while...
    read next character from inputLine
    if nextCharacter equals a vowel
        output position of nextCharacter

part 2 loop imp.: decide the looping condition

What goal do you want to reach in your loop? I want to read all the characters in the input line.

part 3 loop imp.: determine the type of loop: count or event controlled?

Count controlled loops are controlled by a counter variable which is varied by a constant amount once per
loop iteration.

This is a count controlled loop because the characterPosition variable
is incremented once per loop iteration until it reaches the final position in the inputLine

for (characterPosition = 0; characterPosition < inputLine length; characterPosition = characterPosition + 1)
    if character at characterPosition in inputLine equals a vowel
        print characterPosition

part 4 loop imp.: setup variables for entering the loop for the first time
List all variables used in the loop and determine how to initialise them.
characterPosition = 0
inputLine length = inputLine length

part 5 loop imp.: process the result after the loop has finished
No result to be processed after loop execution.

part 6 loop imp.: trace the loop with typical examples
done on paper

part 7 loop imp.: implement the loop in Java
see PartE.java Java language source file

step 4: declare variables and constants that you need and specify their types
String inputLine = inputStream readLine
int characterPosition = 0
int inputLineLength = inputLine length
String character = inputLine.charAt(characterPosition)

step 5: Turn the pseudocode into Java statements
See PartE.java Java language source file