Find the errors in the following if statements.

a. if x > 0 then System.out.print(x);

The word "then" is not a reserved word in Java and is therefore not recognised by the compiler and will cause a compile time error because the compiler will not recognise said token.


b. if (1 + x > Math.pow(x, Math.sqrt(2)) { y = y + x; }

There is a missing parenthesis at the end of the decision statement condition. If we add up opening parentheses and subtract closing parentheses starting from the left we obtain one instead of zero which means
there is an extra opening parenthesis compared to closing parentheses.
This is a compile time error because the compiler will expect there to be a closing parenthesis.


c. if (x = 1) { y++; }

The condition "x = 1" is an assignment operation. It does not test for equality because it does not use the equality relational operator == which tests if the relationship between to values is equal.
Therefore, there is no condition in this decision (if) statement and the compiler will return a compile time error. How can "assign x a value of 1" be true?


d. 
x = in.nextInt();
if (in.hasNextInt())
{
	sum = sum + x;
}
else
{
	System.out.println("Bad input for x");
}

I don't think there is a syntax error here so the compiler should translate this Java code just fine into machine language.
However, there does seem to be a logic error which will cause a run time error: these instuctions call the nextInt method of the Scanner class
reads the next token of the input stream as an integer, and then assign this integer value to x. 
The problem is that this sequence of instructions does so before having checked if there is an integer in the input stream.
This means that if the user inputs a letter, for example 'a', there will be a run time error and the program will crash due to an incorrect input.

