R3.3 What is encapsulation? Why is it useful?

Encapsulation is the act of hiding implementation details of an object and providing a public interface that describes how to use an object.

Encapsulation is useful because:

 - it allows programmers to use objects whose inner workings they do not know, and may not be able to implement themselves, and do useful things with them. For example, I can use String objects without knowing how they are implemented. This greatly simplifies the role of the programmer, who no longer needs to know how to implement all of the objects they use.
 
 - if a programmer finds an unexpected value inside an object of a class, they only need to look at the methods of that class to find the source of the error. In this way encapsulation simplifies the process of diagnosing errors in a program. This is especially useful when a program consists of hundreds of classes and thousands of methods.
 
 - Finally, encapsulation makes it possible for the system programmers of a class to change the implementation of a class: its methods, its constructors, and the way data about objects of the class are stored internally without having to tell the programmers who use the class.
